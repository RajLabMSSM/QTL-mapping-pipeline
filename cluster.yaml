__default__:
  queue: express
  cores: 1
  mem: 8000
  time: '12:00'
  name: $(basename $(pwd)):{rule}:{wildcards}
  output: logs/{rule}:{wildcards}.stdout
  error: logs/{rule}:{wildcards}.stderr
  gpuString: ""
  himem: ""

createGCTFiles:
    mem: 16000

prepareExpression:
  cores: 4
  mem: 8000

prepareSplicing:
    cores: 4
    mem: 8000

prepareEditing:
    cores: 4
    mem: 8000

runPEER:
    queue: premium
    cores: 1
    time: 144:00

tensorQTL_cis:
    queue: gpu
    cores: 4
    mem: 24000
    time: 144:00
    gpuString: -R rusage[ngpus_excl_p=4] -R a100

tensorQTL_cis_nominal:
    queue: gpu
    cores: 4
    mem: 24000
    time: 144:00
    gpuString: -R rusage[ngpus_excl_p=4] -R a100

tensorQTL_trans:
    queue: gpu
    cores: 4
    mem: 24000
    time: 144:00
    gpuString: -R rusage[ngpus_excl_p=4] -R a100

tensorQTL_cis_interaction:
    queue: gpu
    cores: 4
    mem: 24000
    time: 144:00
    gpuString: -R rusage[ngpus_excl_p=4] -R a100

tensorQTL_insteraction_trans:
   queue: gpu
   cores: 4
   mem: 24000
   time: 144:00
   gpuString: -R rusage[ngpus_excl_p=2] -R a100

tensorQTL_cis_independent:
   queue: gpu
   cores: 4
   mem: 24000
   time: 144:00
   gpuString: -R rusage[ngpus_excl_p=4] -R a100

mergeNominalResult:
  cores: 1
  mem: 16000

mergeNominalResult_interaction:
  cores: 1
  mem: 16000

## copied from Shea - this shows how to set rule-specific cluster parameters
